"""
This type stub file was generated by pyright.
"""

import numpy as np
import torch
from typing import Literal, TYPE_CHECKING, TypedDict
from speech_recognition.audio import AudioData
from typing_extensions import Unpack
from whisper import Whisper

if TYPE_CHECKING:
    ...
class LoadModelOptionalParameters(TypedDict, total=False):
    device: str | torch.device
    download_root: str
    in_memory: bool
    ...


class TranscribeOptionalParameters(TypedDict, total=False):
    """Transcribe optional parameters & DecodingOptions parameters."""
    temperature: float | tuple[float, ...]
    task: Literal["transcribe", "translate"]
    language: str
    fp16: bool
    ...


class Segment(TypedDict):
    id: int
    seek: int
    start: float
    end: float
    text: str
    tokens: list[int]
    temperature: float
    avg_logprob: float
    compression_ratio: float
    no_speech_prob: float
    ...


class TranscribeOutput(TypedDict):
    text: str
    segments: list[Segment]
    language: str
    ...


class TranscribableAdapter:
    def __init__(self, model: Whisper) -> None:
        ...
    
    def transcribe(self, audio_array: np.ndarray, **kwargs) -> TranscribeOutput:
        ...
    


def recognize(recognizer, audio_data: AudioData, model: str = ..., show_dict: bool = ..., load_options: LoadModelOptionalParameters | None = ..., **transcribe_options: Unpack[TranscribeOptionalParameters]) -> str | TranscribeOutput:
    """Performs speech recognition on ``audio_data`` (an ``AudioData`` instance), using Whisper.

    Pick ``model`` from output of :command:`python -c 'import whisper; print(whisper.available_models())'`.
    See also https://github.com/openai/whisper?tab=readme-ov-file#available-models-and-languages.

    If ``show_dict`` is true, returns the full dict response from Whisper, including the detected language. Otherwise returns only the transcription.

    You can specify:

        * ``language``: recognition language, an uncapitalized full language name like "english" or "chinese". See the full language list at https://github.com/openai/whisper/blob/main/whisper/tokenizer.py

            * If not set, Whisper will automatically detect the language.

        * ``task``

            * If you want transcribe + **translate** to english, set ``task="translate"``.

    Other values are passed directly to whisper. See https://github.com/openai/whisper/blob/main/whisper/transcribe.py for all options.
    """
    ...